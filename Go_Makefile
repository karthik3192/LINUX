PROJECT_NAME := "daq"
.DEFAULT_GOAL := help
PKG := "digitalapps.saint-gobain.net/ems-project/$(PROJECT_NAME)"
export GOSUMDB=off
export GOPRIVATE="digitalapps.saint-gobain.net/ems-project/$(PROJECT_NAME)"
ifeq ($(OS),Windows_NT)
	PKG_LIST := $(shell go list ./... )
	GO_FILES := $(shell dir /S /b *.go | grep -v _test.go)
	
else 
	PKG_LIST := $(shell go list ${PKG}/... )
	GO_FILES := $(shell find . -name '*.go' | grep -v _test.go)
endif 



.PHONY: dep build clean test coverage coverhtml lint run 


lint:				## Lint the files
	@golint -set_exit_status ${PKG_LIST}

test:				## run only go test <pkg>
	@go test $(PKG) 

unittest:			## Run unittests
	 @go test -short ${PKG_LIST}

race: dep			## Run data race detector
	@go test -race -short ${PKG_LIST}

msan: dep			## Run memory sanitizer
	@go test -msan -short ${PKG_LIST}


dep:				## Get the dependencies
	@go get -v -d ./...


build: dep			## Build the binary file
	@go build -i -v $(PKG) 

clean:				## clean the build
	@go clean $(PKG)

run:  				## Run the package 
	@go run $(PKG) 
	
help:				## Display this help screen
	@grep   -E   '^[a-zA-Z_-]+:.*?##'   $(MAKEFILE_LIST)  | awk 'BEGIN {printf("\033[4;36mCommand\033[0m          \033[4;32mDescription\n");  FS = ":.*?## "} {printf("\033[0;36mmake %-10s  \033[0;32m%s\n", $$1, $$2)} END{printf("\033[0;36m%-15s  \033[0;32m%s\n" , "make", "Display this help screen");  printf("\033[0m")}'
